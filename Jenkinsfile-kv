pipeline {
    agent any

    options {
        ansiColor('xterm')
    }

    environment {
        // Archivo secreto con configuraci칩n en formato JSON
        JOHN_SECRET = credentials('john-secret-kv') // ID de la credencial Azure Key Vault
    }

    stages {
        stage('Login en Azure') {
            steps {
                withCredentials([azureServicePrincipal(credentialsId: 'credentials_id')]) {
                    sh '''
                        echo "Autenticando en Azure..."
                        az login --service-principal \
                            -u "$AZURE_CLIENT_ID" \
                            -p "$AZURE_CLIENT_SECRET" \
                            --tenant "$AZURE_TENANT_ID"

                        az account set --subscription "$AZURE_SUBSCRIPTION_ID"
                    '''
                }
            }
        }

        stage('Leer secreto de Azure Key Vault') {
            steps {
                sh '''
                    echo "Leyendo configuraciones desde archivo secreto..."

                    if [ ! -f "$SECRET_JSON" ]; then
                        echo "ERROR: Archivo secreto no encontrado: $SECRET_JSON"
                        exit 1
                    fi

                    jq -r 'to_entries[] | "\\(.key)=\\(.value)"' "$SECRET_JSON" | while IFS='=' read -r key value; do
                        if [ -z "$key" ] || [ -z "$value" ]; then
                            echo "Saltando configuraci칩n inv치lida: $key=$value"
                            continue
                        fi

                        echo "Aplicando configuraci칩n: $key=$value"
                        az functionapp config appsettings set \
                            --name func-func-dev-eastus \
                            --resource-group rg-func-dev-eastus \
                            --settings "$key=$value"
                    done
                '''
            }
        }
    }
}